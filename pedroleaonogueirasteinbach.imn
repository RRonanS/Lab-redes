node n1 {
    type router
    model PC
    network-config {
	hostname n1
	!
	interface eth0
	 ip address 192.0.3.20/24
	 ipv6 address 2001:db8:1::20/64
	!
    }
    canvas c1
    iconcoords {212.0 222.0}
    labelcoords {212.0 254.0}
    interface-peer {eth0 n3}
}

node n2 {
    type router
    model host
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 192.0.2.10/24
	 ipv6 address 2001:db8:0::10/64
	!
    }
    canvas c1
    iconcoords {633.0 342.0}
    labelcoords {633.0 374.0}
    interface-peer {eth0 n3}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('pedroleaonogueirasteinbach', )
	cmdup=('python -m SimpleHTTPServer 80', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:pedroleaonogueirasteinbach
	custom-command pedroleaonogueirasteinbach
	config {
	<html>
	<head>
		<title>Empresa de desenvolvimento de software</title>
	</head>
	<body>
		Bem vindo!
		<p>
		Busque soluções e aplicações com a gente
		</p>
	</body>
	
	</html>
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n3 {
    type router
    model router
    network-config {
	hostname n3
	!
	interface eth1
	 ip address 192.0.3.1/24
	 ipv6 address 2001:db8:1::1/64
	!
	interface eth0
	 ip address 192.0.2.1/24
	 ipv6 address 2001:db8:0::1/64
	!
    }
    canvas c1
    iconcoords {451.0 226.0}
    labelcoords {451.0 258.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n1}
}

link l1 {
    nodes {n3 n2}
    bandwidth 0
}

link l2 {
    nodes {n3 n1}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

